@using System.ComponentModel.DataAnnotations
@using WalliCardsNet.ClassLibrary
@using WalliCardsNet.Client.Services
@inject NavigationManager NavigationManager

@inject ClientAuthService authService;

<EditForm Model="Credentials" OnValidSubmit="LoginAsync" FormName="LoginForm">
    <div class="flex flex-col w-2/3 sm:w-1/3 mx-auto gap-2 py-2">
        <DataAnnotationsValidator />
        <div class="w-full text-center">
            <Icon Name="IconName.Envelope" Size="IconSize.x3"></Icon>
            <InputText class="px-3 py-2 rounded-lg shadow-lg w-full focus:ring ring-cyan-100" @bind-Value="Credentials.Email" placeholder="Email" />
            <ValidationMessage For="@(() => Credentials.Email)" />
        </div>
        <div class="w-full text-center">
            <label><Icon Name="IconName.Lock" Size="IconSize.x3"></Icon></label>
            <InputText class="px-3 py-2 rounded-lg shadow-lg w-full focus:ring ring-cyan-100" @bind-Value="Credentials.Password" placeholder="Password" type="password" />
            <ValidationMessage For="@(() => Credentials.Password)" />
        </div>
        <div class="w-full mx-auto text-center flex flex-col gap-2">
                <button class="font-bold rounded-md shadow-md text-gray-50 bg-teal-300 py-3 px-4 hover:bg-teal-400 active:bg-teal-200 transition " type="submit">Login</button>
                <LoginGoogle/>
                <NavLink class="text-blue-500 underline underline-offset-2 tracking-wider" href="/forgot-password">Forgot your password?</NavLink>
        </div>
    </div>
</EditForm>

<br />
<div class="text-center bg-white border border-black rounded-lg shadow-md w-1/3 mx-auto py-3 font-semibold">
<p>Test user credentials:</p>
<p>Email: kalle.kula@mail.com</p>
<p>Password: Asdf1234!</p>

</div>

@code {
    public LoginCredentials Credentials { get; set; } = new();

    private async Task LoginAsync()
    {
        await authService.LoginAsync(Credentials.Email, Credentials.Password);
        StateHasChanged();
        NavigationManager.NavigateTo("https://localhost:7102", true);
    }

    public class LoginCredentials
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress]
        public string? Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string? Password { get; set; }
        
    }
}
