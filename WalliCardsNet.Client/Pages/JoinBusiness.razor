@page "/join/{token}"
@using System.ComponentModel.DataAnnotations
@using WalliCardsNet.ClassLibrary
@using WalliCardsNet.ClassLibrary.Customer
@inject WalliCardsApiService WalliCardsApiService
@inject HttpClient Http


<h3>JoinBusiness</h3>
@if (Business != null)
{
    <p>Join @Business.Name</p>
    <EditForm Model="@JoinFormModel" OnValidSubmit="Submit">
        <DataAnnotationsValidator/>

        <div>
            <label>Email Adress</label>
            <InputText @bind-Value="JoinFormModel.Email" type="email"></InputText>
            <ValidationMessage For="@(() => JoinFormModel.Email)"/>
        </div>
        <button type="submit">Join</button>
    </EditForm>
}
else
{
    <p>@ErrorMessage</p>
}

@code {
    [Parameter]
    public string Token { get; set; }
    public PublicBusinessTokenDTO Business {get; set;}
    public JoinFormModel JoinFormModel { get; set; } = new JoinFormModel();
    public string Email { get; set; }
    public string SuccessMessage { get; set; }
    public string ErrorMessage { get; set; }
    public bool Fetching = false;

    protected override async Task OnInitializedAsync()
    {
        Fetching = true;
        var response = await WalliCardsApiService.GetByTokenAsync<PublicBusinessTokenDTO>("Business", Token);
        if (response.IsSuccess)
        {
            Business = response.Data;
        }
        else
        {
            ErrorMessage = response.Message;
        }
        Fetching = false;
        StateHasChanged();
    }

    public async Task Submit()
    {
        JoinFormModel.BusinessToken = Token;
        var response = await WalliCardsApiService.PostAsync<JoinFormModel>("Customer/join", JoinFormModel);
        if (response.IsSuccess)
        {
            Console.WriteLine("success");
        }
        else
        {
            Console.WriteLine($"Error: {response.Message}");
        }
    }

}
