@page "/stripe"
@using System.Text.Json
@inject HttpClient Http
@inject WalliCardsApiService WalliCardsApiService
@inject NavigationManager NavigationManager

<div class="bg-white flex flex-col mx-auto text-center gap-2 py-12 px-8 rounded-md max-w-md shadow-sm">
    <h1 class="font-bold text-xl">Subscribe to WalliCards now!</h1>
    <InputText class="px-3 py-2 rounded-lg shadow-lg w-full focus:ring ring-cyan-100 border" placeholder="Email Address" type="email" id="email" @bind-Value="CustomerEmail"></InputText>
    <button class="font-bold rounded-md shadow-md text-gray-50 bg-teal-300 py-3 px-4 hover:bg-teal-400 active:bg-teal-200 transition" @onclick="CreateCheckoutSession">Checkout</button>
    <p class="text-sm tracking-wide text-opacity-30 text-gray-500">You will be redirected to Stripe for payment</p>
</div>


@if (ErrorMessage != null)
{
    <p class="text-danger">@ErrorMessage</p>
}

@code {
    private string lookupKey = "monthlySub";
    private string CustomerEmail { get; set; } = "";
    private string ErrorMessage { get; set; } = "";

    private async Task CreateCheckoutSession()
    {
        try
        {
            if (string.IsNullOrEmpty(CustomerEmail))
            {
                ErrorMessage = "Please enter an email address";
                return;
            }
            var formData = new Dictionary<string, string>
            {
                { "lookup-key", lookupKey },
                {"customer_email", CustomerEmail}
            };

            var apiResponse = await WalliCardsApiService.PostFormUrlEncodedAsync("/api/payment/create-checkout-session", formData);
            if (apiResponse.IsSuccessStatusCode)
            {
                var jsonResponse = await apiResponse.Content.ReadFromJsonAsync<JsonDocument>();
                var location = jsonResponse.RootElement.GetProperty("url").GetString();
                NavigationManager.NavigateTo(location, true);
            }
            else
            {
                ErrorMessage = "Failed to create checkout session.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }
}