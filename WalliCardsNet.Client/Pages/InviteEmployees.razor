@page "/invite"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject WalliCardsApiService WalliCardsApiService

<div class="mx-auto max-w-md gap-2 rounded-md bg-white px-8 py-12 text-center shadow-sm">
    <EditForm class="flex flex-col gap-4" Model="Emails" OnValidSubmit="SubmitForm">
        <h1 class="mb-4 text-lg font-bold">Invite employees</h1>
        @foreach (var email in Emails.ToList())
        {
            var index = Emails.IndexOf(email);
            <div class="flex gap-4">
                <InputText type="email" class="w-full rounded-lg border border-gray-300 px-3 py-2 shadow-lg outline-none valid:outline-none valid:border-none invalid:border-none invalid:ring-2 invalid:ring-red-200 invalid:outline-none focus:ring-2 focus:ring-teal-200 focus:outline-none" placeholder="Email address" @bind-Value="Emails[index]" />
                <button type="button" class="rounded-md bg-red-200 px-3 py-2 font-bold text-white shadow-md hover:bg-red-300" @onclick="(() => RemoveEmailField(index))">Remove</button>
            </div>
        }
        <div class="flex flex-col gap-2">
            <button type="button" class="rounded-md bg-teal-300 px-4 py-3 font-bold text-gray-50 shadow-md transition hover:bg-teal-400 active:bg-teal-200" @onclick="AddEmailField">Add Another Email</button>
            <button type="submit" class="rounded-md bg-teal-300 px-4 py-3 font-bold text-gray-50 shadow-md transition hover:bg-teal-400 active:bg-teal-200">Invite Employees</button>
        </div>
        @if (!string.IsNullOrEmpty(Message))
        {
            <p>@Message</p>
        }

    </EditForm>
</div>

@code {
    public List<string> Emails { get; set; } = new List<string> { "" };

    public void AddEmailField()
    {
        Emails.Add("");
    }

    public void RemoveEmailField(int index)
    {
        if (Emails.Count > 1)
        {
            Emails.RemoveAt(index);
            StateHasChanged(); 
        }
    }

    public async Task SubmitForm()
    {
        Emails.RemoveAll(e => string.IsNullOrEmpty(e)); 

        if (!Emails.Any())
        {
            Message = "Please enter at least one email address.";
            return;
        }

        var response = await WalliCardsApiService.PostAsync<List<string>>("mail/batch-invite", Emails);
        if (response.IsSuccess)
        {
            Message = "Invitations sent successfully!";
        }
        else
        {
            Message = "Failed to send invitations.";
        }
    }

    public string Message { get; set; }
}