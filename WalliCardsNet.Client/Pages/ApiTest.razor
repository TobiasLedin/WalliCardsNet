@page "/api-test"
@inject HttpClient Http
@using WalliCardsNet.ClassLibrary

<div>
    <button class="uppercase font-montserrat font-bold text-white cursor-pointer bg-green-400 py-2 px-4 border-2 border-black rounded hover:bg-green-300" @onclick='() => SetDataType("Business")'>Businesses</button>
    <button class="font-sans bg-blue-200 text-2xl" disabled>Customers</button>
    <button disabled>Devices</button>
    <button disabled>CardTemplates</button>
</div>

<div>
    <button @onclick='() => SetApiEndpoint("GetAll")'>Get All</button>
    <button @onclick='() => SetApiEndpoint("GetById")'>Get by ID</button>
    <button @onclick='() => SetApiEndpoint("Add")'>Add</button>
</div>

<div><button></button></div>

@if (GetComponentType() is Type componentType)
{
    <DynamicComponent Type="componentType"></DynamicComponent>
}

@code {

    private Dictionary<(string dataType, string apiEndpoint), Type> componentMapping;

    protected override async Task OnInitializedAsync()
    {
        componentMapping = new Dictionary<(string, string), Type>
        {
            { ("business", "GetById"), typeof(WalliCardsNet.Client.Components.API.BusinessGetById) },
            { ("business", "GetAll"), typeof(WalliCardsNet.Client.Components.API.BusinessGetAll) },
            {("business", "Add"), typeof(WalliCardsNet.Client.Components.API.BusinessAdd)},
        };
    }

    public string CurrentDataType { get; set; } = "business";
    public string CurrentApiEndpoint { get; set; } = "GetAll";


    public async Task SetDataType(string dataType)
    {
        CurrentDataType = dataType;
        CurrentApiEndpoint = "";
    }

    public async Task SetApiEndpoint(string apiEndpoint)
    {
        CurrentApiEndpoint = apiEndpoint;
    }

    public Type GetComponentType()
    {
        if (componentMapping.TryGetValue((CurrentDataType, CurrentApiEndpoint), out var componentType))
        {
            return componentType;
        }
        return null;
        
    }
}
